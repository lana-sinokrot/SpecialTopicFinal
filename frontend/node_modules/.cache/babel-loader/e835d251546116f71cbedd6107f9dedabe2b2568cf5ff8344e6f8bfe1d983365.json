{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api';\n\n// Admin credentials\nconst ADMIN_CREDENTIALS = {\n  email: 'admin@htu.edu.jo',\n  password: 'Admin@123',\n  first_name: 'Admin',\n  last_name: 'User',\n  user_id: 'admin',\n  is_admin: true\n};\nconst register = async (firstName, lastName, email, password) => {\n  try {\n    const response = await axios.post(`${API_URL}/auth/register`, {\n      first_name: firstName,\n      last_name: lastName,\n      email,\n      password\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nconst login = async (email, password) => {\n  try {\n    // Check for admin credentials first\n    if (email === ADMIN_CREDENTIALS.email && password === ADMIN_CREDENTIALS.password) {\n      const adminData = {\n        ...ADMIN_CREDENTIALS,\n        token: 'admin-token' // This is just for frontend, won't be used for API calls for admin\n      };\n      localStorage.setItem('user', JSON.stringify(adminData));\n      return adminData;\n    }\n\n    // If not admin, proceed with regular login\n    const response = await axios.post(`${API_URL}/auth/login`, {\n      email,\n      password\n    });\n    if (response.data.token) {\n      const userData = {\n        token: response.data.token,\n        user_id: response.data.user_id,\n        first_name: response.data.first_name,\n        last_name: response.data.last_name,\n        email: response.data.email,\n        is_admin: false\n      };\n      localStorage.setItem('user', JSON.stringify(userData));\n      return userData;\n    }\n  } catch (error) {\n    throw error;\n  }\n};\nconst logout = () => {\n  localStorage.removeItem('user');\n};\nconst getCurrentUser = () => {\n  const userStr = localStorage.getItem('user');\n  if (userStr) {\n    return JSON.parse(userStr);\n  }\n  return null;\n};\nconst updateCurrentUser = userData => {\n  const currentUser = getCurrentUser();\n  const updatedUser = {\n    ...currentUser,\n    ...userData\n  };\n  localStorage.setItem('user', JSON.stringify(updatedUser));\n  return updatedUser;\n};\nconst authService = {\n  login,\n  register,\n  logout,\n  getCurrentUser,\n  updateCurrentUser\n};\nexport default authService;","map":{"version":3,"names":["axios","API_URL","ADMIN_CREDENTIALS","email","password","first_name","last_name","user_id","is_admin","register","firstName","lastName","response","post","data","error","login","adminData","token","localStorage","setItem","JSON","stringify","userData","logout","removeItem","getCurrentUser","userStr","getItem","parse","updateCurrentUser","currentUser","updatedUser","authService"],"sources":["C:/Users/Lana Sinokrot/Desktop/Test-test/frontend/src/services/auth.service.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api';\r\n\r\n// Admin credentials\r\nconst ADMIN_CREDENTIALS = {\r\n  email: 'admin@htu.edu.jo',\r\n  password: 'Admin@123',\r\n  first_name: 'Admin',\r\n  last_name: 'User',\r\n  user_id: 'admin',\r\n  is_admin: true\r\n};\r\n\r\nconst register = async (firstName, lastName, email, password) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/auth/register`, {\r\n      first_name: firstName,\r\n      last_name: lastName,\r\n      email,\r\n      password,\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst login = async (email, password) => {\r\n  try {\r\n    // Check for admin credentials first\r\n    if (email === ADMIN_CREDENTIALS.email && password === ADMIN_CREDENTIALS.password) {\r\n      const adminData = {\r\n        ...ADMIN_CREDENTIALS,\r\n        token: 'admin-token' // This is just for frontend, won't be used for API calls for admin\r\n      };\r\n      localStorage.setItem('user', JSON.stringify(adminData));\r\n      return adminData;\r\n    }\r\n\r\n    // If not admin, proceed with regular login\r\n    const response = await axios.post(`${API_URL}/auth/login`, {\r\n      email,\r\n      password,\r\n    });\r\n\r\n    if (response.data.token) {\r\n      const userData = {\r\n        token: response.data.token,\r\n        user_id: response.data.user_id,\r\n        first_name: response.data.first_name,\r\n        last_name: response.data.last_name,\r\n        email: response.data.email,\r\n        is_admin: false\r\n      };\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n      return userData;\r\n    }\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem('user');\r\n};\r\n\r\nconst getCurrentUser = () => {\r\n  const userStr = localStorage.getItem('user');\r\n  if (userStr) {\r\n    return JSON.parse(userStr);\r\n  }\r\n  return null;\r\n};\r\n\r\nconst updateCurrentUser = (userData) => {\r\n  const currentUser = getCurrentUser();\r\n  const updatedUser = { ...currentUser, ...userData };\r\n  localStorage.setItem('user', JSON.stringify(updatedUser));\r\n  return updatedUser;\r\n};\r\n\r\nconst authService = {\r\n  login,\r\n  register,\r\n  logout,\r\n  getCurrentUser,\r\n  updateCurrentUser\r\n};\r\n\r\nexport default authService; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;;AAE3C;AACA,MAAMC,iBAAiB,GAAG;EACxBC,KAAK,EAAE,kBAAkB;EACzBC,QAAQ,EAAE,WAAW;EACrBC,UAAU,EAAE,OAAO;EACnBC,SAAS,EAAE,MAAM;EACjBC,OAAO,EAAE,OAAO;EAChBC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,QAAQ,GAAG,MAAAA,CAAOC,SAAS,EAAEC,QAAQ,EAAER,KAAK,EAAEC,QAAQ,KAAK;EAC/D,IAAI;IACF,MAAMQ,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,GAAGZ,OAAO,gBAAgB,EAAE;MAC5DI,UAAU,EAAEK,SAAS;MACrBJ,SAAS,EAAEK,QAAQ;MACnBR,KAAK;MACLC;IACF,CAAC,CAAC;IACF,OAAOQ,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,MAAMC,KAAK,GAAG,MAAAA,CAAOb,KAAK,EAAEC,QAAQ,KAAK;EACvC,IAAI;IACF;IACA,IAAID,KAAK,KAAKD,iBAAiB,CAACC,KAAK,IAAIC,QAAQ,KAAKF,iBAAiB,CAACE,QAAQ,EAAE;MAChF,MAAMa,SAAS,GAAG;QAChB,GAAGf,iBAAiB;QACpBgB,KAAK,EAAE,aAAa,CAAC;MACvB,CAAC;MACDC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACL,SAAS,CAAC,CAAC;MACvD,OAAOA,SAAS;IAClB;;IAEA;IACA,MAAML,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,GAAGZ,OAAO,aAAa,EAAE;MACzDE,KAAK;MACLC;IACF,CAAC,CAAC;IAEF,IAAIQ,QAAQ,CAACE,IAAI,CAACI,KAAK,EAAE;MACvB,MAAMK,QAAQ,GAAG;QACfL,KAAK,EAAEN,QAAQ,CAACE,IAAI,CAACI,KAAK;QAC1BX,OAAO,EAAEK,QAAQ,CAACE,IAAI,CAACP,OAAO;QAC9BF,UAAU,EAAEO,QAAQ,CAACE,IAAI,CAACT,UAAU;QACpCC,SAAS,EAAEM,QAAQ,CAACE,IAAI,CAACR,SAAS;QAClCH,KAAK,EAAES,QAAQ,CAACE,IAAI,CAACX,KAAK;QAC1BK,QAAQ,EAAE;MACZ,CAAC;MACDW,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACC,QAAQ,CAAC,CAAC;MACtD,OAAOA,QAAQ;IACjB;EACF,CAAC,CAAC,OAAOR,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,MAAMS,MAAM,GAAGA,CAAA,KAAM;EACnBL,YAAY,CAACM,UAAU,CAAC,MAAM,CAAC;AACjC,CAAC;AAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B,MAAMC,OAAO,GAAGR,YAAY,CAACS,OAAO,CAAC,MAAM,CAAC;EAC5C,IAAID,OAAO,EAAE;IACX,OAAON,IAAI,CAACQ,KAAK,CAACF,OAAO,CAAC;EAC5B;EACA,OAAO,IAAI;AACb,CAAC;AAED,MAAMG,iBAAiB,GAAIP,QAAQ,IAAK;EACtC,MAAMQ,WAAW,GAAGL,cAAc,CAAC,CAAC;EACpC,MAAMM,WAAW,GAAG;IAAE,GAAGD,WAAW;IAAE,GAAGR;EAAS,CAAC;EACnDJ,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACU,WAAW,CAAC,CAAC;EACzD,OAAOA,WAAW;AACpB,CAAC;AAED,MAAMC,WAAW,GAAG;EAClBjB,KAAK;EACLP,QAAQ;EACRe,MAAM;EACNE,cAAc;EACdI;AACF,CAAC;AAED,eAAeG,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}