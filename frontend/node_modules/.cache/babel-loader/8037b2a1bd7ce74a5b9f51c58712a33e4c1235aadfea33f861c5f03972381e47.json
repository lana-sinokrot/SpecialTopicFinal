{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lana Sinokrot\\\\Desktop\\\\Test-test\\\\frontend\\\\src\\\\components\\\\FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport '../styles/FileUpload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = ({\n  onFilesChange,\n  maxFileSize = 5\n}) => {\n  _s();\n  const [dragActive, setDragActive] = useState(false);\n  const [error, setError] = useState('');\n  const inputRef = useRef(null);\n  const ACCEPTED_TYPES = {\n    'image/jpeg': ['.jpg', '.jpeg'],\n    'image/png': ['.png'],\n    'application/pdf': ['.pdf'],\n    'application/msword': ['.doc'],\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document': ['.docx'],\n    'text/plain': ['.txt']\n  };\n  const acceptedExtensions = Object.values(ACCEPTED_TYPES).flat().join(',');\n  const validateFile = file => {\n    // Size check\n    if (file.size > maxFileSize * 1024 * 1024) {\n      return `File \"${file.name}\" is too large. Max size is ${maxFileSize}MB.`;\n    }\n\n    // Type check (fallback for missing MIME types)\n    const isAccepted = Object.keys(ACCEPTED_TYPES).includes(file.type);\n    if (!isAccepted) {\n      return `File \"${file.name}\" is not an accepted type.`;\n    }\n    return null;\n  };\n  const handleFiles = files => {\n    const fileList = Array.from(files);\n    const errors = [];\n    const validFiles = [];\n    fileList.forEach(file => {\n      const validationError = validateFile(file);\n      if (validationError) {\n        errors.push(validationError);\n      } else {\n        validFiles.push(file);\n      }\n    });\n    setError(errors.join('\\n'));\n    if (validFiles.length > 0) {\n      onFilesChange(validFiles);\n    }\n\n    // Reset input so same files can be uploaded again\n    if (inputRef.current) {\n      inputRef.current.value = '';\n    }\n  };\n  const handleDrag = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (e.type === 'dragenter' || e.type === 'dragover') {\n      setDragActive(true);\n    } else if (e.type === 'dragleave') {\n      setDragActive(false);\n    }\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    setDragActive(false);\n    if (e.dataTransfer.files.length > 0) {\n      handleFiles(e.dataTransfer.files);\n    }\n  };\n  const handleChange = e => {\n    if (e.target.files.length > 0) {\n      handleFiles(e.target.files);\n    }\n  };\n  const handleClick = () => {\n    if (inputRef.current) {\n      inputRef.current.click();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-upload\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `upload-container ${dragActive ? 'drag-active' : ''}`,\n      onDragEnter: handleDrag,\n      onDragLeave: handleDrag,\n      onDragOver: handleDrag,\n      onDrop: handleDrop,\n      onClick: handleClick,\n      role: \"button\",\n      tabIndex: 0,\n      onKeyPress: e => (e.key === 'Enter' || e.key === ' ') && handleClick(),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        type: \"file\",\n        multiple: true,\n        className: \"file-input\",\n        onChange: handleChange,\n        accept: acceptedExtensions,\n        hidden: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"upload-icon\",\n          children: \"\\uD83D\\uDCCE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drag and drop files here or click to select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"upload-hint\",\n          children: [\"Accepted files: PDF, DOC, DOCX, TXT, JPG, JPEG, PNG (Max \", maxFileSize, \"MB)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-error\",\n      children: error.split('\\n').map((msg, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: msg\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"KfCG281ob8agle6Qxu9CzvF1zR8=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useRef","useState","jsxDEV","_jsxDEV","FileUpload","onFilesChange","maxFileSize","_s","dragActive","setDragActive","error","setError","inputRef","ACCEPTED_TYPES","acceptedExtensions","Object","values","flat","join","validateFile","file","size","name","isAccepted","keys","includes","type","handleFiles","files","fileList","Array","from","errors","validFiles","forEach","validationError","push","length","current","value","handleDrag","e","preventDefault","stopPropagation","handleDrop","dataTransfer","handleChange","target","handleClick","click","className","children","onDragEnter","onDragLeave","onDragOver","onDrop","onClick","role","tabIndex","onKeyPress","key","ref","multiple","onChange","accept","hidden","fileName","_jsxFileName","lineNumber","columnNumber","split","map","msg","i","_c","$RefreshReg$"],"sources":["C:/Users/Lana Sinokrot/Desktop/Test-test/frontend/src/components/FileUpload.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport '../styles/FileUpload.css';\r\n\r\nconst FileUpload = ({ onFilesChange, maxFileSize = 5 }) => {\r\n  const [dragActive, setDragActive] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const inputRef = useRef(null);\r\n\r\n  const ACCEPTED_TYPES = {\r\n    'image/jpeg': ['.jpg', '.jpeg'],\r\n    'image/png': ['.png'],\r\n    'application/pdf': ['.pdf'],\r\n    'application/msword': ['.doc'],\r\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document': ['.docx'],\r\n    'text/plain': ['.txt']\r\n  };\r\n\r\n  const acceptedExtensions = Object.values(ACCEPTED_TYPES).flat().join(',');\r\n\r\n  const validateFile = (file) => {\r\n    // Size check\r\n    if (file.size > maxFileSize * 1024 * 1024) {\r\n      return `File \"${file.name}\" is too large. Max size is ${maxFileSize}MB.`;\r\n    }\r\n\r\n    // Type check (fallback for missing MIME types)\r\n    const isAccepted = Object.keys(ACCEPTED_TYPES).includes(file.type);\r\n    if (!isAccepted) {\r\n      return `File \"${file.name}\" is not an accepted type.`;\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  const handleFiles = (files) => {\r\n    const fileList = Array.from(files);\r\n    const errors = [];\r\n    const validFiles = [];\r\n\r\n    fileList.forEach(file => {\r\n      const validationError = validateFile(file);\r\n      if (validationError) {\r\n        errors.push(validationError);\r\n      } else {\r\n        validFiles.push(file);\r\n      }\r\n    });\r\n\r\n    setError(errors.join('\\n'));\r\n\r\n    if (validFiles.length > 0) {\r\n      onFilesChange(validFiles);\r\n    }\r\n\r\n    // Reset input so same files can be uploaded again\r\n    if (inputRef.current) {\r\n      inputRef.current.value = '';\r\n    }\r\n  };\r\n\r\n  const handleDrag = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    if (e.type === 'dragenter' || e.type === 'dragover') {\r\n      setDragActive(true);\r\n    } else if (e.type === 'dragleave') {\r\n      setDragActive(false);\r\n    }\r\n  };\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setDragActive(false);\r\n    if (e.dataTransfer.files.length > 0) {\r\n      handleFiles(e.dataTransfer.files);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.files.length > 0) {\r\n      handleFiles(e.target.files);\r\n    }\r\n  };\r\n\r\n  const handleClick = () => {\r\n    if (inputRef.current) {\r\n      inputRef.current.click();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"file-upload\">\r\n      <div\r\n        className={`upload-container ${dragActive ? 'drag-active' : ''}`}\r\n        onDragEnter={handleDrag}\r\n        onDragLeave={handleDrag}\r\n        onDragOver={handleDrag}\r\n        onDrop={handleDrop}\r\n        onClick={handleClick}\r\n        role=\"button\"\r\n        tabIndex={0}\r\n        onKeyPress={(e) => (e.key === 'Enter' || e.key === ' ') && handleClick()}\r\n      >\r\n        <input\r\n          ref={inputRef}\r\n          type=\"file\"\r\n          multiple\r\n          className=\"file-input\"\r\n          onChange={handleChange}\r\n          accept={acceptedExtensions}\r\n          hidden\r\n        />\r\n        <div className=\"upload-message\">\r\n          <i className=\"upload-icon\">ðŸ“Ž</i>\r\n          <p>Drag and drop files here or click to select</p>\r\n          <span className=\"upload-hint\">\r\n            Accepted files: PDF, DOC, DOCX, TXT, JPG, JPEG, PNG (Max {maxFileSize}MB)\r\n          </span>\r\n        </div>\r\n      </div>\r\n      {error && (\r\n        <div className=\"upload-error\">\r\n          {error.split('\\n').map((msg, i) => (\r\n            <p key={i}>{msg}</p>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}