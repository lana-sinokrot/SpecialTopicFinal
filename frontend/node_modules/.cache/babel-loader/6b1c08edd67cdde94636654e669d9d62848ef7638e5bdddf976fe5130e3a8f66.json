{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lana Sinokrot\\\\Desktop\\\\Final-Project\\\\study-group-finder\\\\src\\\\AccountPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './AccountPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AccountPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    company: '',\n    jobTitle: '',\n    industry: '',\n    yearsExperience: '',\n    skills: '',\n    linkedinUrl: '',\n    bio: ''\n  });\n  const [isEditing, setIsEditing] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        // Check authentication\n        const isAuthenticated = localStorage.getItem('isAuthenticated');\n        if (!isAuthenticated) {\n          navigate('/login');\n          return;\n        }\n\n        // Simulate API call to get user data\n        await new Promise(resolve => setTimeout(resolve, 500));\n\n        // Mock user data - replace with real API call\n        const mockUserData = {\n          firstName: 'John',\n          lastName: 'Doe',\n          email: 'john@example.com',\n          company: 'Tech Corp',\n          jobTitle: 'Software Developer',\n          skills: 'React, JavaScript, Node.js',\n          linkedinUrl: 'https://linkedin.com/in/johndoe'\n        };\n        setFormData(mockUserData);\n      } catch (error) {\n        setError('Failed to load user data');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchUserData();\n  }, [navigate]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    try {\n      // Simulate API call to save data\n      await new Promise(resolve => setTimeout(resolve, 800));\n      console.log('Form data saved:', formData);\n      setIsEditing(false);\n    } catch (error) {\n      setError('Failed to save changes');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading account information...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"account-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Professional Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"account-form\",\n      children: isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"save-btn\",\n          disabled: isLoading,\n          children: isLoading ? 'Saving...' : 'Save Information'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => setIsEditing(false),\n          className: \"cancel-btn\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => setIsEditing(true),\n          className: \"edit-btn\",\n          children: \"Edit Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(AccountPage, \"7c0xHoWmEiOtzKN9ojtGaIYQyXs=\", false, function () {\n  return [useNavigate];\n});\n_c = AccountPage;\nexport default AccountPage;\nvar _c;\n$RefreshReg$(_c, \"AccountPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","AccountPage","_s","navigate","formData","setFormData","firstName","lastName","email","company","jobTitle","industry","yearsExperience","skills","linkedinUrl","bio","isEditing","setIsEditing","isLoading","setIsLoading","error","setError","fetchUserData","isAuthenticated","localStorage","getItem","Promise","resolve","setTimeout","mockUserData","handleChange","e","name","value","target","prev","handleSubmit","preventDefault","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Lana Sinokrot/Desktop/Final-Project/study-group-finder/src/AccountPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './AccountPage.css';\r\n\r\nconst AccountPage = () => {\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    company: '',\r\n    jobTitle: '',\r\n    industry: '',\r\n    yearsExperience: '',\r\n    skills: '',\r\n    linkedinUrl: '',\r\n    bio: ''\r\n  });\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n      try {\r\n        // Check authentication\r\n        const isAuthenticated = localStorage.getItem('isAuthenticated');\r\n        if (!isAuthenticated) {\r\n          navigate('/login');\r\n          return;\r\n        }\r\n\r\n        // Simulate API call to get user data\r\n        await new Promise(resolve => setTimeout(resolve, 500));\r\n        \r\n        // Mock user data - replace with real API call\r\n        const mockUserData = {\r\n          firstName: 'John',\r\n          lastName: 'Doe',\r\n          email: 'john@example.com',\r\n          company: 'Tech Corp',\r\n          jobTitle: 'Software Developer',\r\n          skills: 'React, JavaScript, Node.js',\r\n          linkedinUrl: 'https://linkedin.com/in/johndoe'\r\n        };\r\n        \r\n        setFormData(mockUserData);\r\n      } catch (error) {\r\n        setError('Failed to load user data');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchUserData();\r\n  }, [navigate]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      // Simulate API call to save data\r\n      await new Promise(resolve => setTimeout(resolve, 800));\r\n      console.log('Form data saved:', formData);\r\n      setIsEditing(false);\r\n    } catch (error) {\r\n      setError('Failed to save changes');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"loading-container\">\r\n        <div className=\"spinner\"></div>\r\n        <p>Loading account information...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"account-container\">\r\n      <h1>Professional Profile</h1>\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n      \r\n      <form onSubmit={handleSubmit} className=\"account-form\">\r\n        {/* ... rest of the form remains the same ... */}\r\n        \r\n        {isEditing ? (\r\n          <div className=\"form-actions\">\r\n            <button \r\n              type=\"submit\" \r\n              className=\"save-btn\"\r\n              disabled={isLoading}\r\n            >\r\n              {isLoading ? 'Saving...' : 'Save Information'}\r\n            </button>\r\n            <button \r\n              type=\"button\" \r\n              onClick={() => setIsEditing(false)}\r\n              className=\"cancel-btn\"\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div className=\"form-actions\">\r\n            <button \r\n              type=\"button\" \r\n              onClick={() => setIsEditing(true)}\r\n              className=\"edit-btn\"\r\n            >\r\n              Edit Information\r\n            </button>\r\n          </div>\r\n        )}\r\n      </form>\r\n      \r\n      {/* ... rest of the component remains the same ... */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}