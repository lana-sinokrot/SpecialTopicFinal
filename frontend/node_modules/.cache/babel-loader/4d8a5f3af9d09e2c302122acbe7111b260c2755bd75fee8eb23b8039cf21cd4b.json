{"ast":null,"code":"const WEATHER_API_KEY = '37f557b7d3464cccb6c161816251006';\nconst BASE_URL = 'https://api.weatherapi.com/v1';\nclass WeatherService {\n  async getCurrentWeather(city = 'Amman') {\n    try {\n      const response = await fetch(`${BASE_URL}/current.json?key=${WEATHER_API_KEY}&q=${city}&aqi=yes`);\n      if (!response.ok) {\n        throw new Error('Weather data fetch failed');\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Error fetching weather:', error);\n      throw error;\n    }\n  }\n  async getForecast(city = 'Amman', days = 3) {\n    try {\n      const response = await fetch(`${BASE_URL}/forecast.json?key=${WEATHER_API_KEY}&q=${city}&days=${days}&aqi=yes`);\n      if (!response.ok) {\n        throw new Error('Forecast data fetch failed');\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Error fetching forecast:', error);\n      throw error;\n    }\n  }\n}\nexport default new WeatherService();","map":{"version":3,"names":["WEATHER_API_KEY","BASE_URL","WeatherService","getCurrentWeather","city","response","fetch","ok","Error","json","error","console","getForecast","days"],"sources":["C:/Users/Lana Sinokrot/Desktop/Test-test/frontend/src/services/weather.service.js"],"sourcesContent":["const WEATHER_API_KEY = '37f557b7d3464cccb6c161816251006';\r\nconst BASE_URL = 'https://api.weatherapi.com/v1';\r\n\r\nclass WeatherService {\r\n  async getCurrentWeather(city = 'Amman') {\r\n    try {\r\n      const response = await fetch(\r\n        `${BASE_URL}/current.json?key=${WEATHER_API_KEY}&q=${city}&aqi=yes`\r\n      );\r\n      \r\n      if (!response.ok) {\r\n        throw new Error('Weather data fetch failed');\r\n      }\r\n      \r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Error fetching weather:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getForecast(city = 'Amman', days = 3) {\r\n    try {\r\n      const response = await fetch(\r\n        `${BASE_URL}/forecast.json?key=${WEATHER_API_KEY}&q=${city}&days=${days}&aqi=yes`\r\n      );\r\n      \r\n      if (!response.ok) {\r\n        throw new Error('Forecast data fetch failed');\r\n      }\r\n      \r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Error fetching forecast:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport default new WeatherService(); "],"mappings":"AAAA,MAAMA,eAAe,GAAG,iCAAiC;AACzD,MAAMC,QAAQ,GAAG,+BAA+B;AAEhD,MAAMC,cAAc,CAAC;EACnB,MAAMC,iBAAiBA,CAACC,IAAI,GAAG,OAAO,EAAE;IACtC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,GAAGL,QAAQ,qBAAqBD,eAAe,MAAMI,IAAI,UAC3D,CAAC;MAED,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAC9C;MAEA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,MAAMA,KAAK;IACb;EACF;EAEA,MAAME,WAAWA,CAACR,IAAI,GAAG,OAAO,EAAES,IAAI,GAAG,CAAC,EAAE;IAC1C,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAC1B,GAAGL,QAAQ,sBAAsBD,eAAe,MAAMI,IAAI,SAASS,IAAI,UACzE,CAAC;MAED,IAAI,CAACR,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MAC/C;MAEA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,MAAMA,KAAK;IACb;EACF;AACF;AAEA,eAAe,IAAIR,cAAc,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}