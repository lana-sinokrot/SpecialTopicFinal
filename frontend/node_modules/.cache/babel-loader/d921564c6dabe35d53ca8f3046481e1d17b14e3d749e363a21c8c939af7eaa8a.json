{"ast":null,"code":"// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import Header from '../JS/Header';\n// import Footer from '../JS/Footer';\n// import '../CSS/AccidentReport.css';\n\n// const HarassmentReport = () => {\n//   const navigate = useNavigate();\n//   const [formData, setFormData] = useState({\n//     reporterName: '',\n//     incidentDate: '',\n//     incidentTime: '',\n//     location: '',\n//     submitionDate: '',\n//     incidentType: 'verbal',\n//     description: '',\n//     injuries: '',\n//     witnesses: '',\n//     files: null\n//   });\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState('');\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({\n//       ...formData,\n//       [name]: value\n//     });\n//   };\n\n//   const handleFileUpload = (e) => {\n//     setFormData({\n//       ...formData,\n//       files: e.target.files\n//     });\n//   };\n\n//   const handleFormSubmit = async (e) => {\n//     e.preventDefault();\n//     setIsLoading(true);\n//     setError('');\n\n//     if (!formData.reporterName || !formData.incidentDate || !formData.location || formData.submitionDate) {\n//       setError('Please fill in all required fields');\n//       setIsLoading(false);\n//       return;\n//     }\n\n//     try {\n//       await new Promise(resolve => setTimeout(resolve, 1500));\n//       alert('Harassment report submitted successfully!');\n//       navigate('/dashboard');\n//     } catch (err) {\n//       setError('Submission failed. Please try again.');\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"report-page\">\n//       <Header isAuthenticated={localStorage.getItem('isAuthenticated')} />\n\n//       <div className=\"report-form-container\">\n//         <h1 className=\"form-title\">Harassment Report</h1>\n\n//         {error && <div className=\"error-message\">{error}</div>}\n\n//         <form onSubmit={handleFormSubmit}>\n//           <fieldset className=\"form-section\">\n//             <legend>Incident Details</legend>\n\n//             <div className=\"input-row\">\n//               <div className=\"input-group\">\n//                 <label>Date *</label>\n//                 <input\n//                   type=\"date\"\n//                   name=\"incidentDate\"\n//                   value={formData.incidentDate}\n//                   onChange={handleInputChange}\n//                   required\n//                 />\n//               </div>\n//               <div className=\"input-group\">\n//                 <label>Time</label>\n//                 <input\n//                   type=\"time\"\n//                   name=\"incidentTime\"\n//                   value={formData.incidentTime}\n//                   onChange={handleInputChange}\n//                 />\n//               </div>\n//             </div>\n\n//             <div className=\"input-group\">\n//               <label>Location *</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"location\"\n//                 value={formData.location}\n//                 onChange={handleInputChange}\n//                 required\n//                 placeholder=\"Where the incident occurred\"\n//               />\n//               <label>Date of submition *</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"submitionDate\"\n//                 value={formData.submitionDate}\n//                 onChange={handleInputChange}\n//                 required\n//                 placeholder=\"Where the incident occurred\"\n//               />\n//             </div>\n\n//             <div className=\"input-group\">\n//               <label>Type of Harassment *</label>\n//               <select\n//                 name=\"incidentType\"\n//                 value={formData.incidentType}\n//                 onChange={handleInputChange}\n//                 required\n//               >\n//                 <option value=\"verbal\">Verbal Harassment</option>\n//                 <option value=\"physical\">Physical Harassment</option>\n//                 <option value=\"sexual\">Sexual Harassment</option>\n//                 <option value=\"bullying\">Bullying/Intimidation</option>\n//                 <option value=\"cyber\">Cyber Harassment</option>\n//                 <option value=\"stalking\">Stalking</option>\n//                 <option value=\"other\">Other</option>\n//               </select>\n//             </div>\n\n//             <div className=\"input-group\">\n//               <label>Description *</label>\n//               <textarea\n//                 name=\"description\"\n//                 value={formData.description}\n//                 onChange={handleInputChange}\n//                 required\n//                 placeholder=\"Please describe what happened in detail...\"\n//               />\n//             </div>\n\n//             <div className=\"input-group\">\n//               <label>Witnesses (if any)</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"witnesses\"\n//                 value={formData.witnesses}\n//                 onChange={handleInputChange}\n//                 placeholder=\"Names of any witnesses\"\n//               />\n//             </div>\n//           </fieldset>\n\n//           <fieldset className=\"form-section\">\n//             <legend>Supporting Evidence</legend>\n//             <div className=\"input-group\">\n//               <label>Upload Supporting Documents</label>\n//               <input\n//                 type=\"file\"\n//                 onChange={handleFileUpload}\n//                 multiple\n//                 accept=\"image/*,.pdf,.doc,.docx\"\n//               />\n//               <small>Screenshots, emails, messages, or documents (max 5MB each)</small>\n//             </div>\n//           </fieldset>\n\n//           <div className=\"form-buttons\">\n//             <button\n//               type=\"submit\"\n//               className=\"submit-button\"\n//               disabled={isLoading}\n//             >\n//               {isLoading ? 'Submitting...' : 'Submit Report'}\n//             </button>\n//             <button\n//               type=\"button\"\n//               className=\"cancel-button\"\n//               onClick={() => navigate(-1)}\n//             >\n//               Cancel\n//             </button>\n//           </div>\n//         </form>\n//       </div>\n\n//       <Footer />\n//     </div>\n//   );\n// };\n\n// export default HarassmentReport;","map":{"version":3,"names":[],"sources":["C:/Users/Lana Sinokrot/Desktop/Final-Project/study-group-finder/src/JS/AccidentReport.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import Header from '../JS/Header';\r\n// import Footer from '../JS/Footer';\r\n// import '../CSS/AccidentReport.css';\r\n\r\n// const HarassmentReport = () => {\r\n//   const navigate = useNavigate();\r\n//   const [formData, setFormData] = useState({\r\n//     reporterName: '',\r\n//     incidentDate: '',\r\n//     incidentTime: '',\r\n//     location: '',\r\n//     submitionDate: '',\r\n//     incidentType: 'verbal',\r\n//     description: '',\r\n//     injuries: '',\r\n//     witnesses: '',\r\n//     files: null\r\n//   });\r\n//   const [isLoading, setIsLoading] = useState(false);\r\n//   const [error, setError] = useState('');\r\n\r\n//   const handleInputChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData({\r\n//       ...formData,\r\n//       [name]: value\r\n//     });\r\n//   };\r\n\r\n//   const handleFileUpload = (e) => {\r\n//     setFormData({\r\n//       ...formData,\r\n//       files: e.target.files\r\n//     });\r\n//   };\r\n\r\n//   const handleFormSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setIsLoading(true);\r\n//     setError('');\r\n\r\n//     if (!formData.reporterName || !formData.incidentDate || !formData.location || formData.submitionDate) {\r\n//       setError('Please fill in all required fields');\r\n//       setIsLoading(false);\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       await new Promise(resolve => setTimeout(resolve, 1500));\r\n//       alert('Harassment report submitted successfully!');\r\n//       navigate('/dashboard');\r\n//     } catch (err) {\r\n//       setError('Submission failed. Please try again.');\r\n//     } finally {\r\n//       setIsLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"report-page\">\r\n//       <Header isAuthenticated={localStorage.getItem('isAuthenticated')} />\r\n      \r\n//       <div className=\"report-form-container\">\r\n//         <h1 className=\"form-title\">Harassment Report</h1>\r\n\r\n//         {error && <div className=\"error-message\">{error}</div>}\r\n\r\n//         <form onSubmit={handleFormSubmit}>\r\n//           <fieldset className=\"form-section\">\r\n//             <legend>Incident Details</legend>\r\n            \r\n//             <div className=\"input-row\">\r\n//               <div className=\"input-group\">\r\n//                 <label>Date *</label>\r\n//                 <input\r\n//                   type=\"date\"\r\n//                   name=\"incidentDate\"\r\n//                   value={formData.incidentDate}\r\n//                   onChange={handleInputChange}\r\n//                   required\r\n//                 />\r\n//               </div>\r\n//               <div className=\"input-group\">\r\n//                 <label>Time</label>\r\n//                 <input\r\n//                   type=\"time\"\r\n//                   name=\"incidentTime\"\r\n//                   value={formData.incidentTime}\r\n//                   onChange={handleInputChange}\r\n//                 />\r\n//               </div>\r\n//             </div>\r\n\r\n//             <div className=\"input-group\">\r\n//               <label>Location *</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 name=\"location\"\r\n//                 value={formData.location}\r\n//                 onChange={handleInputChange}\r\n//                 required\r\n//                 placeholder=\"Where the incident occurred\"\r\n//               />\r\n//               <label>Date of submition *</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 name=\"submitionDate\"\r\n//                 value={formData.submitionDate}\r\n//                 onChange={handleInputChange}\r\n//                 required\r\n//                 placeholder=\"Where the incident occurred\"\r\n//               />\r\n//             </div>\r\n\r\n//             <div className=\"input-group\">\r\n//               <label>Type of Harassment *</label>\r\n//               <select\r\n//                 name=\"incidentType\"\r\n//                 value={formData.incidentType}\r\n//                 onChange={handleInputChange}\r\n//                 required\r\n//               >\r\n//                 <option value=\"verbal\">Verbal Harassment</option>\r\n//                 <option value=\"physical\">Physical Harassment</option>\r\n//                 <option value=\"sexual\">Sexual Harassment</option>\r\n//                 <option value=\"bullying\">Bullying/Intimidation</option>\r\n//                 <option value=\"cyber\">Cyber Harassment</option>\r\n//                 <option value=\"stalking\">Stalking</option>\r\n//                 <option value=\"other\">Other</option>\r\n//               </select>\r\n//             </div>\r\n\r\n//             <div className=\"input-group\">\r\n//               <label>Description *</label>\r\n//               <textarea\r\n//                 name=\"description\"\r\n//                 value={formData.description}\r\n//                 onChange={handleInputChange}\r\n//                 required\r\n//                 placeholder=\"Please describe what happened in detail...\"\r\n//               />\r\n//             </div>\r\n\r\n//             <div className=\"input-group\">\r\n//               <label>Witnesses (if any)</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 name=\"witnesses\"\r\n//                 value={formData.witnesses}\r\n//                 onChange={handleInputChange}\r\n//                 placeholder=\"Names of any witnesses\"\r\n//               />\r\n//             </div>\r\n//           </fieldset>\r\n\r\n//           <fieldset className=\"form-section\">\r\n//             <legend>Supporting Evidence</legend>\r\n//             <div className=\"input-group\">\r\n//               <label>Upload Supporting Documents</label>\r\n//               <input\r\n//                 type=\"file\"\r\n//                 onChange={handleFileUpload}\r\n//                 multiple\r\n//                 accept=\"image/*,.pdf,.doc,.docx\"\r\n//               />\r\n//               <small>Screenshots, emails, messages, or documents (max 5MB each)</small>\r\n//             </div>\r\n//           </fieldset>\r\n\r\n//           <div className=\"form-buttons\">\r\n//             <button\r\n//               type=\"submit\"\r\n//               className=\"submit-button\"\r\n//               disabled={isLoading}\r\n//             >\r\n//               {isLoading ? 'Submitting...' : 'Submit Report'}\r\n//             </button>\r\n//             <button\r\n//               type=\"button\"\r\n//               className=\"cancel-button\"\r\n//               onClick={() => navigate(-1)}\r\n//             >\r\n//               Cancel\r\n//             </button>\r\n//           </div>\r\n//         </form>\r\n//       </div>\r\n\r\n//       <Footer />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default HarassmentReport;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}